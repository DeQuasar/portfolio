name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
      - 'v*.*.*-preview'
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean Nuxt content cache
        run: rm -rf .data

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Vitest unit suite (docker)
        run: docker compose run --rm test pnpm test:unit

  ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean Nuxt content cache
        run: rm -rf .data

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prepare Playwright volume
        run: mkdir -p .playwright/node_modules

      - name: Run dockerized Playwright UI suite
        env:
          ENABLE_BROWSER_TESTS: 'true'
          NUXT_CONTENT_LOCAL_CACHE_DIR: "/tmp/content-cache-${{ github.run_id }}-${{ github.run_attempt }}"
        run: pnpm test:ui:container

      - name: Cleanup Playwright containers
        if: always()
        run: docker compose -f docker-compose.playwright.yml down --remove-orphans || true

  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean Nuxt content cache
        run: rm -rf .data

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate static site & validate HTML
        env:
          SKIP_PRUNE: '1'
        run: pnpm run validate:html

      - name: Enforce bundle budgets
        run: pnpm run check:bundle

      - name: Prune build artifacts
        run: pnpm run prune:artifacts

      - name: Prepare Playwright volume
        run: mkdir -p .playwright/node_modules

      - name: Run accessibility audits (docker)
        env:
          ENABLE_BROWSER_TESTS: 'true'
          PLAYWRIGHT_BROWSERS: 'chromium'
          SKIP_GENERATE: '1'
          NUXT_CONTENT_LOCAL_CACHE_DIR: "/tmp/content-cache-${{ github.run_id }}-${{ github.run_attempt }}-a11y"
        run: pnpm test:accessibility:container

      - name: Run Lighthouse performance checks (docker)
        env:
          PLAYWRIGHT_BROWSERS: 'chromium'
          PLAYWRIGHT_UID: '0'
          PLAYWRIGHT_GID: '0'
          LOCAL_PREVIEW_LOG: '/workspace/reports/local-preview.log'
          NUXT_CONTENT_LOCAL_CACHE_DIR: "/tmp/content-cache-${{ github.run_id }}-${{ github.run_attempt }}-lhci"
        run: pnpm test:performance:container

      - name: Cleanup Playwright containers
        if: always()
        run: docker compose -f docker-compose.playwright.yml down --remove-orphans || true

  deploy:
    name: Deploy to Cloudflare Pages
    needs:
      - unit
      - ui
      - audit
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
    env:
      CLOUDFLARE_PROJECT_NAME: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
      IS_PREVIEW: ${{ contains(github.ref, '-preview') }}
      CF_DEPLOY_BRANCH: ${{ contains(github.ref, '-preview') && 'preview' || 'main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean Nuxt content cache
        run: rm -rf .data

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate static site
        run: pnpm generate

      - name: Deploy via Wrangler Direct Upload
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: '3.81.0'
          packageManager: pnpm
          command: >
            pages deploy .output/public
            --project-name=${{ env.CLOUDFLARE_PROJECT_NAME }}
            --branch=${{ env.CF_DEPLOY_BRANCH }}
            --commit-hash=${{ github.sha }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
