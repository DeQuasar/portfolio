name: Deploy to Cloudflare Pages

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-preview'
  workflow_dispatch: {}

permissions:
  contents: write
  deployments: write

concurrency:
  group: cloudflare-pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_PROJECT_NAME: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
      IS_PREVIEW: ${{ contains(github.ref, '-preview') }}
      CF_DEPLOY_BRANCH: ${{ contains(github.ref, '-preview') && 'preview' || 'main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean Nuxt content cache
        run: rm -rf .data

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate static site
        run: pnpm generate

      - name: Deploy via Wrangler Direct Upload
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: '3.81.0'
          packageManager: pnpm
          command: >
            pages deploy .output/public
            --project-name=${{ env.CLOUDFLARE_PROJECT_NAME }}
            --branch=${{ env.CF_DEPLOY_BRANCH }}
            --commit-hash=${{ github.sha }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote preview alias
        if: ${{ env.IS_PREVIEW == 'true' }}
        env:
          CF_PAGES_DEPLOYMENT_ID: ${{ steps.deploy.outputs.pages-deployment-id }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          ./.github/scripts/promote-cloudflare-alias.sh preview "alias preview deployment"

      - name: Promote production alias
        if: ${{ env.IS_PREVIEW != 'true' }}
        env:
          CF_PAGES_DEPLOYMENT_ID: ${{ steps.deploy.outputs.pages-deployment-id }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          ./.github/scripts/promote-cloudflare-alias.sh production "alias production deployment"

      - name: Publish GitHub release notes
        if: ${{ env.IS_PREVIEW != 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
